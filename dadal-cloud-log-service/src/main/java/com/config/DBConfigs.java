/**
 * All rights Reserved, Designed By www.xcompany.com  
 * @Package: com.controller   
 * @author: Frankjiu
 * @date: 2020年6月1日
 * @version: V1.0
 */

package com.config;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

/**
 * @Description: 初始化数据库表配置
 * @author: Frankjiu
 * @date: 2020年6月1日
 */
@Component
public class DBConfigs implements CommandLineRunner {

	private static Logger logger = Logger.getLogger(DBConfigs.class);

	@Value("${spring.datasource.driverClassName}")
	private String DRIVER_CLASS_NAME;

	@Value("${spring.datasource.url}")
	private String URL;

	@Value("${spring.datasource.username}")
	private String USER_NAME;

	@Value("${spring.datasource.password}")
	private String PASS_WORD;

	@Override
	public void run(String... args) throws Exception {
		try {
			Thread.sleep(1000);
			// 加载HSQL DB的JDBC驱动
			logger.info(">>>>>> Initing table in dataBase start.. >>>" + DRIVER_CLASS_NAME);
			Class.forName(DRIVER_CLASS_NAME);
			// 在内存中建立数据库db,用户名为sa,密码为空
			Connection conn = DriverManager.getConnection(URL, USER_NAME, PASS_WORD);
			Statement stat = conn.createStatement();

			// 判断是否已建表
			boolean exists = true;
			try {
				stat.executeQuery("SELECT 1 FROM App_Log");
			} catch (Exception e) {
				exists = false;
			}
			// 表创建
			if (!exists) {
				stat.executeUpdate("CREATE TABLE App_Log(Log_Id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,"
						+ "		  Log_Time timestamp NOT NULL,           " + "		  Thread_Name varchar(50) NOT NULL,      "
						+ "		  Log_Leval varchar(20) DEFAULT NULL,    " + "		  Class_Name varchar(50) DEFAULT NULL,   "
						+ "		  Log_Info varchar(2000) NOT NULL,       " + "		  PRIMARY KEY (Log_Id))");
			}

			// 插入数据
			String sql = "INSERT INTO App_Log(Log_Time, Thread_Name, Log_Leval, Class_Name, Log_Info) VALUES(now(), 'test2', 'test3', 'test4', 'test5')";
			stat.executeUpdate(sql);
			logger.info(" >>> TestData insert successfully! >>>");
			// 查询数据
			PreparedStatement pstmt = conn.prepareStatement("SELECT * FROM App_Log");
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				String s = null;
				s = rs.getString(1) + ":" + rs.getString(2) + ":" + rs.getString(3) + ":" + rs.getString(4) + ":" + rs.getString(5)
						+ ":" + rs.getString(6);
				logger.info("测试查询结果:" + s);
			}

		} catch (Exception e) {
			logger.error(e);
		}
	}

}
